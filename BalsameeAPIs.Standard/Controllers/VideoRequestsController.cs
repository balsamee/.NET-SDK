/*
 * BalsameeAPIs.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json.Converters;
using BalsameeAPIs.Standard;
using BalsameeAPIs.Standard.Utilities;
using BalsameeAPIs.Standard.Http.Request;
using BalsameeAPIs.Standard.Http.Response;
using BalsameeAPIs.Standard.Http.Client;
using BalsameeAPIs.Standard.Exceptions;

namespace BalsameeAPIs.Standard.Controllers
{
    public partial class VideoRequestsController: BaseController
    {
        #region Singleton Pattern

        //private static variables for the singleton pattern
        private static object syncObject = new object();
        private static VideoRequestsController instance = null;

        /// <summary>
        /// Singleton pattern implementation
        /// </summary>
        internal static VideoRequestsController Instance
        {
            get
            {
                lock (syncObject)
                {
                    if (null == instance)
                    {
                        instance = new VideoRequestsController();
                    }
                }
                return instance;
            }
        }

        #endregion Singleton Pattern

        /// <summary>
        ///     Create new reservation request
        ///     
        ///   URL: /reservation_requests
        ///   Method: POST
        ///   @param doctor_id
        ///   @param address
        ///   @param address_details
        ///   @param mobile_number
        ///   @param country_code
        ///   @param patient_latitude
        ///   @param patient_longitude
        ///   @param country_code] mobile country code
        ///   @header [String] X-Authentication-Token
        ///   @header [String] X-Session-Id
        ///   @return [JsonArray]  errors  ( code: 422 )
        /// </summary>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="doctorId">Required parameter: Example: </param>
        /// <param name="howPatientFeels">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void CreateApiV5VideoRequestsPost(
                string xSessionId,
                string xAuthenticationToken,
                string doctorId,
                string howPatientFeels)
        {
            Task t = CreateApiV5VideoRequestsPostAsync(xSessionId, xAuthenticationToken, doctorId, howPatientFeels);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        ///     Create new reservation request
        ///     
        ///   URL: /reservation_requests
        ///   Method: POST
        ///   @param doctor_id
        ///   @param address
        ///   @param address_details
        ///   @param mobile_number
        ///   @param country_code
        ///   @param patient_latitude
        ///   @param patient_longitude
        ///   @param country_code] mobile country code
        ///   @header [String] X-Authentication-Token
        ///   @header [String] X-Session-Id
        ///   @return [JsonArray]  errors  ( code: 422 )
        /// </summary>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="doctorId">Required parameter: Example: </param>
        /// <param name="howPatientFeels">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task CreateApiV5VideoRequestsPostAsync(
                string xSessionId,
                string xAuthenticationToken,
                string doctorId,
                string howPatientFeels)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Session-Id", xSessionId },
                { "X-Authentication-Token", xAuthenticationToken }
            };

            //append form/field parameters
            var _fields = new List<KeyValuePair<string, Object>>()
            {
                new KeyValuePair<string, object>( "doctor_id", doctorId ),
                new KeyValuePair<string, object>( "how_patient_feels", howPatientFeels )
            };
            //remove null parameters
            _fields = _fields.Where(kvp => kvp.Value != null).ToList();

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Post(_queryUrl, _headers, _fields);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// Doctor reject resesrvation request
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAppId">Required parameter: Example: </param>
        /// <param name="currentStatus">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void UpdateApiV5VideoRequests755Put(
                string xAuthenticationToken,
                string xSessionId,
                string xAppId,
                string currentStatus)
        {
            Task t = UpdateApiV5VideoRequests755PutAsync(xAuthenticationToken, xSessionId, xAppId, currentStatus);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// Doctor reject resesrvation request
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAppId">Required parameter: Example: </param>
        /// <param name="currentStatus">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task UpdateApiV5VideoRequests755PutAsync(
                string xAuthenticationToken,
                string xSessionId,
                string xAppId,
                string currentStatus)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests/755");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Authentication-Token", xAuthenticationToken },
                { "X-Session-Id", xSessionId },
                { "X-App-Id", xAppId }
            };

            //append form/field parameters
            var _fields = new List<KeyValuePair<string, Object>>()
            {
                new KeyValuePair<string, object>( "current_status", currentStatus )
            };
            //remove null parameters
            _fields = _fields.Where(kvp => kvp.Value != null).ToList();

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Put(_queryUrl, _headers, _fields);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="ratingStars">Required parameter: Example: </param>
        /// <param name="ratingReview">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void CreateApiV5VideoRequests32RatingsPost(
                string xAuthenticationToken,
                string xSessionId,
                string ratingStars,
                string ratingReview)
        {
            Task t = CreateApiV5VideoRequests32RatingsPostAsync(xAuthenticationToken, xSessionId, ratingStars, ratingReview);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="ratingStars">Required parameter: Example: </param>
        /// <param name="ratingReview">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task CreateApiV5VideoRequests32RatingsPostAsync(
                string xAuthenticationToken,
                string xSessionId,
                string ratingStars,
                string ratingReview)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests/32/ratings");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Authentication_Token", xAuthenticationToken },
                { "X-Session_Id", xSessionId }
            };

            //append form/field parameters
            var _fields = new List<KeyValuePair<string, Object>>()
            {
                new KeyValuePair<string, object>( "rating[stars]", ratingStars ),
                new KeyValuePair<string, object>( "rating[review]", ratingReview )
            };
            //remove null parameters
            _fields = _fields.Where(kvp => kvp.Value != null).ToList();

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Post(_queryUrl, _headers, _fields);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="promoCode">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void CreateApiV5VideoRequestsCheckValidityCodePost(string xSessionId, string xAuthenticationToken, string promoCode)
        {
            Task t = CreateApiV5VideoRequestsCheckValidityCodePostAsync(xSessionId, xAuthenticationToken, promoCode);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="promoCode">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task CreateApiV5VideoRequestsCheckValidityCodePostAsync(string xSessionId, string xAuthenticationToken, string promoCode)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests/check_validity_code");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-session-id", xSessionId },
                { "X-authentication-token", xAuthenticationToken }
            };

            //append form/field parameters
            var _fields = new List<KeyValuePair<string, Object>>()
            {
                new KeyValuePair<string, object>( "promo_code", promoCode )
            };
            //remove null parameters
            _fields = _fields.Where(kvp => kvp.Value != null).ToList();

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Post(_queryUrl, _headers, _fields);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="caseInfo">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void UpdateApiV5VideoRequests2668AddCaseInfoPatch(string xAuthenticationToken, string xSessionId, string caseInfo)
        {
            Task t = UpdateApiV5VideoRequests2668AddCaseInfoPatchAsync(xAuthenticationToken, xSessionId, caseInfo);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="caseInfo">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task UpdateApiV5VideoRequests2668AddCaseInfoPatchAsync(string xAuthenticationToken, string xSessionId, string caseInfo)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests/2668/add_case_info");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Authentication-Token", xAuthenticationToken },
                { "X-Session-Id", xSessionId }
            };

            //append form/field parameters
            var _fields = new List<KeyValuePair<string, Object>>()
            {
                new KeyValuePair<string, object>( "case_info", caseInfo )
            };
            //remove null parameters
            _fields = _fields.Where(kvp => kvp.Value != null).ToList();

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Patch(_queryUrl, _headers, _fields);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        ///     Create new reservation request
        ///     
        ///   URL: /video_requests
        ///   Method: POST
        ///   @param doctor_id
        ///   @param address
        ///   @param address_details
        ///   @param mobile_number
        ///   @param country_code
        ///   @param patient_latitude
        ///   @param patient_longitude
        ///   @param country_code] mobile country code
        ///   @header [String] X-Authentication-Token
        ///   @header [String] X-Session-Id
        ///   @return [JsonArray]  errors  ( code: 422 )
        /// </summary>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void GetApiV5VideoRequests28Get(string xSessionId, string xAuthenticationToken)
        {
            Task t = GetApiV5VideoRequests28GetAsync(xSessionId, xAuthenticationToken);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        ///     Create new reservation request
        ///     
        ///   URL: /video_requests
        ///   Method: POST
        ///   @param doctor_id
        ///   @param address
        ///   @param address_details
        ///   @param mobile_number
        ///   @param country_code
        ///   @param patient_latitude
        ///   @param patient_longitude
        ///   @param country_code] mobile country code
        ///   @header [String] X-Authentication-Token
        ///   @header [String] X-Session-Id
        ///   @return [JsonArray]  errors  ( code: 422 )
        /// </summary>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task GetApiV5VideoRequests28GetAsync(string xSessionId, string xAuthenticationToken)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests/28");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Session-Id", xSessionId },
                { "X-Authentication-Token", xAuthenticationToken }
            };

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Get(_queryUrl,_headers);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// speciality_id&career_level_id
        /// </summary>
        /// <param name="type">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void GetApiV5DoctorsWithRelationsEmbededGet(string type, string xSessionId, string xAuthenticationToken)
        {
            Task t = GetApiV5DoctorsWithRelationsEmbededGetAsync(type, xSessionId, xAuthenticationToken);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// speciality_id&career_level_id
        /// </summary>
        /// <param name="type">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task GetApiV5DoctorsWithRelationsEmbededGetAsync(string type, string xSessionId, string xAuthenticationToken)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/doctors_with_relations_embeded");

            //process optional query parameters
            APIHelper.AppendUrlWithQueryParameters(_queryBuilder, new Dictionary<string, object>()
            {
                { "type", type }
            },ArrayDeserializationFormat,ParameterSeparator);


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Session-Id", xSessionId },
                { "X-Authentication-Token", xAuthenticationToken }
            };

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Get(_queryUrl,_headers);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void GetApiV5ConferenceRooms54141Get(string xSessionId, string xAuthenticationToken)
        {
            Task t = GetApiV5ConferenceRooms54141GetAsync(xSessionId, xAuthenticationToken);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task GetApiV5ConferenceRooms54141GetAsync(string xSessionId, string xAuthenticationToken)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/conference_rooms/54141");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Session-Id", xSessionId },
                { "X-Authentication-Token", xAuthenticationToken }
            };

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Get(_queryUrl,_headers);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void GetApiV5VideoRequests31ShowCaseInfoGet(string xAuthenticationToken, string xSessionId)
        {
            Task t = GetApiV5VideoRequests31ShowCaseInfoGetAsync(xAuthenticationToken, xSessionId);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task GetApiV5VideoRequests31ShowCaseInfoGetAsync(string xAuthenticationToken, string xSessionId)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests/31/show_case_info");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Authentication-Token", xAuthenticationToken },
                { "X-Session-Id", xSessionId }
            };

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Get(_queryUrl,_headers);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// increment intervals count
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="currentStatus">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void UpdateApiV5VideoRequests72Put(string xAuthenticationToken, string xSessionId, string currentStatus)
        {
            Task t = UpdateApiV5VideoRequests72PutAsync(xAuthenticationToken, xSessionId, currentStatus);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// increment intervals count
        /// </summary>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="currentStatus">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task UpdateApiV5VideoRequests72PutAsync(string xAuthenticationToken, string xSessionId, string currentStatus)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests/72");


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Authentication-Token", xAuthenticationToken },
                { "X-Session-Id", xSessionId }
            };

            //append form/field parameters
            var _fields = new List<KeyValuePair<string, Object>>()
            {
                new KeyValuePair<string, object>( "current_status", currentStatus )
            };
            //remove null parameters
            _fields = _fields.Where(kvp => kvp.Value != null).ToList();

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Put(_queryUrl, _headers, _fields);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="status">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public void GetApiV5VideoRequestsGet(string status, string xSessionId, string xAuthenticationToken)
        {
            Task t = GetApiV5VideoRequestsGetAsync(status, xSessionId, xAuthenticationToken);
            APIHelper.RunTaskSynchronously(t);
        }

        /// <summary>
        /// TODO: Add Description
        /// </summary>
        /// <param name="status">Required parameter: Example: </param>
        /// <param name="xSessionId">Required parameter: Example: </param>
        /// <param name="xAuthenticationToken">Required parameter: Example: </param>
        /// <return>Returns the void response from the API call</return>
        public async Task GetApiV5VideoRequestsGetAsync(string status, string xSessionId, string xAuthenticationToken)
        {
            //the base uri for api requests
            string _baseUri = Configuration.GetBaseURI();

            //prepare query string for API call
            StringBuilder _queryBuilder = new StringBuilder(_baseUri);
            _queryBuilder.Append("/video_requests");

            //process optional query parameters
            APIHelper.AppendUrlWithQueryParameters(_queryBuilder, new Dictionary<string, object>()
            {
                { "status", status }
            },ArrayDeserializationFormat,ParameterSeparator);


            //validate and preprocess url
            string _queryUrl = APIHelper.CleanUrl(_queryBuilder);

            //append request with appropriate headers and parameters
            var _headers = new Dictionary<string,string>()
            {
                { "user-agent", "APIMATIC 2.0" },
                { "X-Session-Id", xSessionId },
                { "X-Authentication-Token", xAuthenticationToken }
            };

            //prepare the API call request to fetch the response
            HttpRequest _request = ClientInstance.Get(_queryUrl,_headers);

            //invoke request and get response
            HttpStringResponse _response = (HttpStringResponse) await ClientInstance.ExecuteAsStringAsync(_request).ConfigureAwait(false);
            HttpContext _context = new HttpContext(_request,_response);
            //handle errors defined at the API level
            base.ValidateResponse(_response, _context);

        }

    }
} 